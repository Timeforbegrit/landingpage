import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabase/client'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
interface FormSubmission {
  name: string
  email: string
  company: string
  position?: string
  phone: string
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
function validateFormData(data: any): { isValid: boolean; errors: string[] } {
  const errors: string[] = []
  
  if (!data.name || data.name.length < 2) {
    errors.push('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞')
  }
  
  if (!data.email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(data.email)) {
    errors.push('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å')
  }
  
  if (!data.company || data.company.length < 2) {
    errors.push('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ')
  }
  
  if (!data.phone || !/^[\+]?[1-9][\d]{10,14}$/.test(data.phone.replace(/[\s\-\(\)]/g, ''))) {
    errors.push('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
  }
  
  return { isValid: errors.length === 0, errors }
}

export async function POST(request: NextRequest) {
  try {
    console.log('üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ POST –∑–∞–ø—Ä–æ—Å–∞ –∫ /api/submit-form')
    
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
    console.log('NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? `‚úÖ ${supabaseUrl}` : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê')
    console.log('NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? `‚úÖ ${supabaseKey.substring(0, 20)}...` : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê')
    
    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
      return NextResponse.json({
        success: false,
        message: '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞',
        details: 'Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'
      }, { status: 500 })
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const formData: FormSubmission = await request.json()
    console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', { 
      name: formData.name, 
      email: formData.email, 
      company: formData.company 
    })
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    const validation = validateFormData(formData)
    if (!validation.isValid) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', validation.errors)
      return NextResponse.json({
        success: false,
        errors: validation.errors
      }, { status: 400 })
    }
    
    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Supabase
    const submissionData = {
      name: formData.name,
      email: formData.email,
      company: formData.company,
      position: formData.position || null,
      phone: formData.phone,
      ip_address: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown',
      user_agent: request.headers.get('user-agent') || 'unknown',
      source: 'website'
    }
    
    console.log('üíæ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Supabase...')
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Supabase
    const { data: submission, error } = await supabase
      .from('submissions')
      .insert([submissionData])
      .select()
      .single()
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Supabase:', error)
      return NextResponse.json({
        success: false,
        message: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
        details: error.message
      }, { status: 500 })
    }
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', submission?.id)
    
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É (–≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ email)
    console.log('üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∑–∞–≥–ª—É—à–∫–∞):', {
      to: 'admin@company.com',
      subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${formData.name} (${formData.company})`,
      submissionId: submission.id
    })
    
    // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return NextResponse.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.',
      submissionId: submission.id
    })
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ API:', error)
    return NextResponse.json({
      success: false,
      message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
}

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
export async function GET() {
  try {
    console.log('üîç GET –∑–∞–ø—Ä–æ—Å –∫ /api/submit-form')
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –∏–∑ Supabase
    const { data: submissions, error } = await supabase
      .from('submissions')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(10)
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', error)
      return NextResponse.json({
        success: false,
        message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
        details: error.message
      }, { status: 500 })
    }
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${submissions?.length || 0} –∑–∞—è–≤–æ–∫`)
    
    return NextResponse.json({
      success: true,
      count: submissions?.length || 0,
      submissions: submissions || []
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ GET /api/submit-form:', error)
    return NextResponse.json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
} 